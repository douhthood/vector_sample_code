package oracle.jdbc.vector.examples;

import oracle.jdbc.OracleType;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import static java.nio.charset.StandardCharsets.UTF_8;

/**
 * <p>
 * An interactive command line program that performs a similarity search using
 * a vector embedding of text sentences. The search is implemented using Oracle
 * Database via the Oracle JDBC Driver. Vector embeddings are generated by an
 * abstract {@link Model}. The <code>Model</code> may be implemented using a
 * remote service such as Cohere or OpenAI. It can also be implemented using a
 * local runtime, such as ONNX.
 * </p>
 */
public class SimilaritySearch {

  private SimilaritySearch() { }

  /**
   * <p>
   * Runs the interactive search with embeddings generated by a given
   * <code>Model</code>.
   * </p><p>
   * This method connects to an Oracle Database and then prompts the user to
   * generate a schema, or use an existing one. The user can then enter search
   * terms and the terminal will display the top matches based on a
   * <code>vector_distance</code> function which is built-in to Oracle Database.
   * </p>
   * @param model Model used to generated vector embeddings. Not null.
   */
  public static void run(Model model) {
    try (
      Connection connection = DriverManager.getConnection(
        Config.get("JDBC_URL"),
        Config.get("JDBC_USER"),
        Config.get("JDBC_PASSWORD"));
      PreparedStatement query = connection.prepareStatement(
        "SELECT info"
          + " FROM my_data"
          + " ORDER BY VECTOR_DISTANCE(v, ?, COSINE)"
          + " FETCH APPROX FIRST ? ROWS ONLY");
    ) {

      // Do we need to create the table and vectorize the data?
      System.out.print("Create schema? (Y/N) ");
      String input =
        new BufferedReader(new InputStreamReader(System.in, UTF_8)).readLine();
      if (input.compareToIgnoreCase("y") == 0) {
        Schema.drop(connection);
        Schema.create(connection);
        Schema.vectorizeTable(connection, model);
      }

      while(true) {
        System.out.print("Search for ('bye' to exit): ");
        input =
          new BufferedReader(new InputStreamReader(System.in, UTF_8))
            .readLine();
        if (input.compareToIgnoreCase("bye") == 0) {
          break;
        }
        float[] embedding = model.embed(new String[]{input})[0];

        query.setObject(1, embedding, OracleType.VECTOR);
        query.setInt(2, 3/*TODO: Let users configure this*/);
        try (ResultSet resultSet = query.executeQuery()) {
          while (resultSet.next()) {
            System.out.println(resultSet.getString("info"));
          }
        }
      }

    }
    catch (Exception exception) {
      throw new RuntimeException(exception);
    }
  }
}
